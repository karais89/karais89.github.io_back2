---
layout: post
title: "2020-10-14"
author: "karais89"
header-style: text
---

인프런에서 결제한 도커 강의 학습 및 내용 정리 진행.
이전에 도커에 대해 몇개의 강의 및 책을 학습한 적은 있어 대략적인 방식만 알고 있는 상태에서, 실제 개발에 적용 가능한지 확인을 위해 학습 중.

## 도커를 쓰는 이유

> 어디서나 도커를 쓰고 있다.

> 결론: 프로그램을 다운 받는 과정을 굉장히 간단하게 만들기 위해

## 도커란 무엇인가?

> 컨테이너를 사용하여 응용프로그램을 더 쉽게 만들고 배포하고 실행할 수 있도록 설계된 도구이며 컨테이너 기반의 오픈소스 가상화 플랫폼이며 생태계이다.

### 컨테이너란?

- [https://www.docker.com/resources/what-container](https://www.docker.com/resources/what-container)

다양한 프로그램, 실행 환경을 컨테이너로 추상화하고 동일한 인터페이스로 프로그램 배포 및 관리를 단순하게 해준다. aws, azure, google cloud등 어디에서든 실행 가능하다.

## 도커 이미지와 도커 컨테이너 정의

도커 컨테이너는 코드와 모든 종속성을 패키지화하여 응용 프로그램이한 컴퓨팅 환경에서 다른 컴퓨팅 환경으로 빠르게 안정적으로 실행되도록 하는 소프트웨어 표준 단위이다.

도커 이미지는 코드, 런타임, 시스템 도구, 시스템 라이브러리 및 설정과 같은 응용 프로그램을 실행하는데 필요한 모든 것을 포함하는 가볍고 독립적이며 실행 가능한 소프트웨어 패키지이다.

> 컨테이너는 이미지의 인스턴스이다.

## WINDOWS를 위한 도커 설치

- [https://www.docker.com/get-started](https://www.docker.com/get-started)
- Docker Desktop 다운로드 현재 2.4.0 버전
- 설치
- 컴퓨터 재시작
- 아이콘 클릭 및 Docker 로그인
    - Docker 사이트 회원가입
    - [https://hub.docker.com/](https://hub.docker.com/)
- 명령 프롬프트에 docker version 입력

설치 완료 후 재부팅시 리눅스 커널 업데이트 안내가 나와서 아래 링크에서 다운로드 받음

- [https://docs.microsoft.com/ko-kr/windows/wsl/wsl2-kernel](https://docs.microsoft.com/ko-kr/windows/wsl/wsl2-kernel)

위와 별개로 Window Ternimal도 설치함

## 도커를 사용할 때의 흐름

1. 도커 클라이언트에 커맨드를 입력
2. 도커 서버에서 커멘드를 받아서 그것에 따라 이미지를 생성하든 컨테이너를 생성하는 모든 작업을 실행한다.

실행 예

```docker
docker run hello-world
```

- 명령어가 도커 서버로 전해짐.
- hello-world 이미지가 있는지 확인.
- 캐시에 없다면 [도커 허브](https://hub.docker.com/)에서 가져오기 ([https://hub.docker.com/_/hello-world](https://hub.docker.com/_/hello-world))