---
layout: post
title: "2021-02-27"
author: "karais89"
header-style: text
---

크롤링보다는 자동화 쪽에 좀 더 관심이 있음.

# 33. 파이썬 Pandas 사용하기(1) - CSV 읽기, 쓰기

데이터 분석, 데이터 처리

대용량, 정렬, 구조화

1. Python Pandas 개요
2. CSV 데이터 간단 개요
3. 파이썬 Pandas로 CSV 데이터 읽고쓰기
4. 파이썬 Pandas로 CSV 데이터 편집하기

과제 : [https://support.spatialkey.com/spatialkey-sample-csv-data/](https://support.spatialkey.com/spatialkey-sample-csv-data/)
CSV: [https://ko.wikipedia.org/wiki/CSV_(파일_형식)](https://ko.wikipedia.org/wiki/CSV_(%ED%8C%8C%EC%9D%BC_%ED%98%95%EC%8B%9D))
Pandas: [http://pandas.pydata.org/](http://pandas.pydata.org/)

CSV

MIME: text/csv

1;2 3,4

4,5,6,7

많은 앱에서 사용 중

```bash
pip install pandas
```

### csv 파일 읽고 편집

```python
import pandas as pd

# 기본 읽기
# df = pd.read_csv('c:/workspace/section4/csv_s1.csv')
# print(df)

# 행 스킵
# df = pd.read_csv('c:/workspace/section4/csv_s1.csv', skiprows=[0])
# print(df)

# 행 스킵, 헤더 생략
# df = pd.read_csv('c:/workspace/section4/csv_s1.csv', skiprows=[0], header=None)
# print(df)

# 헤더 정의
# df = pd.read_csv('c:/workspace/section4/csv_s1.csv', skiprows=[0], header=None, names=["Month", 2013, 2014, 2015])
# print(df)

# 인덱스 컬럼 정의
# df = pd.read_csv('c:/workspace/section4/csv_s1.csv', skiprows=[0], header=None, names=["Month", 2013, 2014, 2015], index_col=[0])
# print(df)

# 특정 값 치환? 잘 안되는 거 같은데?
# df = pd.read_csv('c:/workspace/section4/csv_s1.csv', skiprows=[0], header=None, names=["Month", 2013, 2014, 2015], index_col=[0], na_values=['JAN'])
# print(pd.isnull(df))
# print(df)

# 실습 정리 및 인덱스 재정의
df = pd.read_csv('c:/workspace/section4/csv_s1.csv', skiprows=[0], header=None, names=["Month", 2013, 2014, 2015])
# print(df)
# print(df.index)
# print(list(df.index))
# print(df.index.values)
# print(df.index.values.tolist())
# print(df.rename(index={0: 'aa', 1: 'bb', 2: 'cc'}))
# print(df.rename(index=lambda x: x*10))

# 읽기
df2 = pd.read_csv('c:/workspace/section4/csv_s2.csv', sep=';', skiprows=[0], header=None, names=['Name', 'Test1', 'Test2', 'Test3', 'Final', 'Grade'])
# print(df2)

# 컬럼 내용 변경
# df2['Grade'] = df2['Grade'].str.replace('C', 'A++')
# print(df2['Grade'])

# 평균 컬럼 추가
# df2['Avg'] = df2[['Test1', 'Test2', 'Test3', 'Final']].mean(axis=1)
# print(df2)

# 합계 컬럼 추가
df2['Sum'] = df2[['Test1', 'Test2', 'Test3', 'Final']].sum(axis=1)
print(df2)
```

### csv 쓰기

```python
import pandas as pd

# 읽기
df2 = pd.read_csv('c:/workspace/section4/csv_s2.csv', sep=';', skiprows=[0], header=None, names=['Name', 'Test1', 'Test2', 'Test3', 'Final', 'Grade'])
# print(df2)

# 컬럼 내용 변경
# df2['Grade'] = df2['Grade'].str.replace('C', 'A++')
# print(df2['Grade'])

# 평균 컬럼 추가
df2['Avg'] = df2[['Test1', 'Test2', 'Test3', 'Final']].mean(axis=1)
# print(df2)

# 합계 컬럼 추가
df2['Sum'] = df2[['Test1', 'Test2', 'Test3', 'Final']].sum(axis=1)
print(df2)

# df2.to_csv('c:/workspace/section4/result_s1.csv')
df2.to_csv('c:/workspace/section4/result_s1.csv', index=False)
```

### 간단한 샘플

```python
import pandas as pd
import numpy as np

# 랜덤으로 DataFrame 생성
# df = pd.DataFrame(np.random.randint(0, 100, size=(100, 4)), columns=['ONE', 'TWO', 'THREE', 'FOUR'])
df = pd.DataFrame(np.random.randn(100, 4), columns=['ONE', 'TWO', 'THREE', 'FOUR'])
print(df)

# df.to_csv('c:/workspace/section4/result_s2.csv', index=False)
df.to_csv('c:/workspace/section4/result_s2.csv', index=False, header=False)
```

### 실습: 샘플 CSV 데이터 다운로드 후 읽기 및 쓰기 실습

```python
import urllib.request as req
import os.path
import zipfile
import pandas as pd

# url
url = 'https://support.spatialkey.com/wp-content/uploads/2021/02/FL_insurance_sample.csv.zip'

# 경로, 파일명
savename = 'c:/workspace/section4/sample.csv.zip'

if not os.path.exists(savename):
    req.urlretrieve(url, savename)

# 압축 해제
zip_names = []
with zipfile.ZipFile(savename) as my_zip:
    zip_names = my_zip.namelist()
    my_zip.extractall()

# csv 파일만 필터링
csv_file_names = list(filter(lambda x: not x.startswith('__MACOSX') and x.endswith('.csv'), zip_names))
# print(csv_file_names)

read_file_name = 'c:/workspace/section4/' + csv_file_names[0]

df = pd.read_csv(read_file_name, index_col=[2])
print(df)

df.to_csv('c:/workspace/section4/result_s3.csv')
```

- 인터넷으로 zip 파일 다운로드 및 압축 해제 후 csv 파일 로드 및 쓰기 완료
- 편집 까지 진행하려고 하다가 해당 csv 데이터가 어떤 데이터인지 까지 파악을 해야 될 것 같아서 간단히 index 정렬까지만 진행하고 완료 함.